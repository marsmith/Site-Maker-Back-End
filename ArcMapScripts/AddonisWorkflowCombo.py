'''
Things To DO:
Fix the code so that random filenames are not there i.e. filenames
are parameters that can be passed in
'''



# -*- coding: utf-8 -*-
# ---------------------------------------------------------------------------
# AddonisWorkflow_01.py
# Created on: 2019-10-08 17:12:26.00000
#   (generated by ArcGIS/ModelBuilder)
# Usage: AddonisWorkflow_01 <USER_CLICK> <SelectedLines> <SelectedSites> 
# Description: 
# ---------------------------------------------------------------------------

# Set the necessary product code
# import arcinfo


# Import arcpy module
import arcpy


def create_subnetwork(gdb_location, lines, sites, click):
    USER_CLICK = arcpy.GetParameterAsText(0)
    if USER_CLICK == '#' or not USER_CLICK:
        USER_CLICK = "USER_CLICK" # provide a default value if unspecified

    SelectedLines = arcpy.GetParameterAsText(1)
    if SelectedLines == '#' or not SelectedLines:
        SelectedLines = gdb_location + "\\" + lines # provide a default value if unspecified

    SelectedSites = arcpy.GetParameterAsText(2)
    if SelectedSites == '#' or not SelectedSites:
        SelectedSites = gdb_location + "\\" + sites # provide a default value if unspecified

    # Local variables:
    Distance__value_or_field_ = "100 Meters"
    region_buff = gdb_location
    buff_site = gdb_location + "\\buff_site"
    Site_P = buff_site
    WORK_gdb = "WORK.gdb"
    Output_Feature_Dataset = WORK_gdb + "\\prog001"
    buff_line = gdb_location + "\\buff_line"
    buff_line_SplitLineAtPoint = gdb_location + "\\buff_line_SplitLineAtPoint"
    Line_P = buff_line_SplitLineAtPoint

    # Process: Buffer
    arcpy.Buffer_analysis(USER_CLICK, region_buff, Distance__value_or_field_, "FULL", "ROUND", "NONE", "", "PLANAR")

    # Process: Intersect (2)
    arcpy.Intersect_analysis(SelectedSites + " #;" + buff_site + " #", buff_site, "ALL", "", "INPUT")

    # Process: Create Feature Dataset
    arcpy.CreateFeatureDataset_management(WORK_gdb, "prog001", "") # Now Output_Feature_Dataset can be used

    # Process: Feature Class to Feature Class
    arcpy.FeatureClassToFeatureClass_conversion(buff_site, Output_Feature_Dataset, "Site_P", "", "FID_Selected_Sites \"FID_Selected_Sites\" true true false 0 Long 0 0 ,First,#," + Site_P +",FID_Selected_Sites,-1,-1;site_no \"site_no\" true true false 15 Text 0 0 ,First,#," + Site_P + ",site_no,-1,-1;station_nm \"station_nm\" true true false 50 Text 0 0 ,First,#," + Site_P + ",station_nm,-1,-1;lat_va \"lat_va\" true true false 11 Text 0 0 ,First,#," + Site_P + ",lat_va,-1,-1;long_va \"long_va\" true true false 12 Text 0 0 ,First,#," + Site_P + ",long_va,-1,-1;dec_lat_va \"dec_lat_va\" true true false 8 Double 0 0 ,First,#," + Site_P + ",dec_lat_va,-1,-1;dec_long_v \"dec_long_v\" true true false 8 Double 0 0 ,First,#," + Site_P + ",dec_long_v,-1,-1;coord_meth \"coord_meth\" true true false 1 Text 0 0 ,First,#," + Site_P + ",coord_meth,-1,-1;coord_datu \"coord_datu\" true true false 10 Text 0 0 ,First,#," + Site_P + ",coord_datu,-1,-1;district_c \"district_c\" true true false 3 Text 0 0 ,First,#," + Site_P + ",district_c,-1,-1;map_nm \"map_nm\" true true false 20 Text 0 0 ,First,#," + Site_P + ",map_nm,-1,-1;state_cd \"state_cd\" true true false 2 Text 0 0 ,First,#," + Site_P + ",state_cd,-1,-1;county_cd \"county_cd\" true true false 3 Text 0 0 ,First,#," + Site_P + ",county_cd,-1,-1;huc_cd \"huc_cd\" true true false 16 Text 0 0 ,First,#," + Site_P + ",huc_cd,-1,-1;agency_use \"agency_use\" true true false 1 Text 0 0 ,First,#," + Site_P + ",agency_use,-1,-1;drain_area \"drain_area\" true true false 8 Text 0 0 ,First,#," + Site_P + ",drain_area,-1,-1;contrib_dr \"contrib_dr\" true true false 8 Text 0 0 ,First,#," + Site_P + ",contrib_dr,-1,-1;project_no \"project_no\" true true false 12 Text 0 0 ,First,#," + Site_P + ",project_no,-1,-1;site_web_c \"site_web_c\" true true false 1 Text 0 0 ,First,#," + Site_P + ",site_web_c,-1,-1;site_cr \"site_cr\" true true false 25 Text 0 0 ,First,#," + Site_P + ",site_cr,-1,-1;FID_USER_CLICK_Buffer2 \"FID_USER_CLICK_Buffer2\" true true false 0 Long 0 0 ,First,#," + Site_P + ",FID_USER_CLICK_Buffer2,-1,-1;BUFF_DIST \"BUFF_DIST\" true true false 0 Double 0 0 ,First,#," + Site_P + ",BUFF_DIST,-1,-1;ORIG_FID \"ORIG_FID\" true true false 0 Long 0 0 ,First,#," + Site_P + ",ORIG_FID,-1,-1", "")

    # Process: Intersect
    arcpy.Intersect_analysis("Selected_Line #;" + gdb_location + " #", buff_line, "ALL", "", "INPUT")

    # Process: Split Line at Point
    arcpy.SplitLineAtPoint_management(buff_line, buff_site, buff_line_SplitLineAtPoint, "")

    # Process: Feature Class to Feature Class (2)
    arcpy.FeatureClassToFeatureClass_conversion(buff_line_SplitLineAtPoint, Output_Feature_Dataset, "Line_P", "", "FID_Selected_Line \"FID_Selected_Line\" true true false 0 Long 0 0 ,First,#," + Line_P + ",FID_Selected_Line,-1,-1;Permanent_Identifier \"Permanent_Identifier\" true true false 40 Text 0 0 ,First,#," + Line_P + ",Permanent_Identifier,-1,-1;FDate \"FDate\" true true false 8 Date 0 0 ,First,#," + Line_P + ",FDate,-1,-1;Resolution \"Resolution\" true true false 4 Long 0 0 ,First,#," + Line_P + ",Resolution,-1,-1;GNIS_ID \"GNIS_ID\" true true false 10 Text 0 0 ,First,#," + Line_P + ",GNIS_ID,-1,-1;GNIS_Name \"GNIS_Name\" true true false 65 Text 0 0 ,First,#," + Line_P + ",GNIS_Name,-1,-1;LengthKM \"LengthKm\" true true false 8 Double 0 0 ,First,#," + Line_P + ",LengthKM,-1,-1;ReachCode \"ReachCode\" true true false 14 Text 0 0 ,First,#," + Line_P + ",ReachCode,-1,-1;FlowDir \"FlowDir\" true true false 4 Long 0 0 ,First,#," + Line_P + ",FlowDir,-1,-1;WBArea_Permanent_Identifier \"WBArea_Permanent_Identifier\" true true false 40 Text 0 0 ,First,#," + Line_P + ",WBArea_Permanent_Identifier,-1,-1;FType \"FType\" true true false 4 Long 0 0 ,First,#," + Line_P + ",FType,-1,-1;FCode \"FCode\" true true false 4 Long 0 0 ,First,#," + Line_P + ",FCode,-1,-1;MainPath \"MainPath\" true true false 4 Long 0 0 ,First,#," + Line_P + ",MainPath,-1,-1;InNetwork \"InNetwork\" true true false 4 Long 0 0 ,First,#," + Line_P + ",InNetwork,-1,-1;VisibilityFilter \"VisibilityFilter\" true true false 4 Long 0 0 ,First,#," + Line_P + ",VisibilityFilter,-1,-1;Shape_Length \"Shape_Length\" true true true 8 Double 0 0 ,First,#," + Line_P + ",Shape_Length,-1,-1;FID_USER_CLICK_Buffer2 \"FID_USER_CLICK_Buffer2\" true true false 0 Long 0 0 ,First,#," + Line_P + ",FID_USER_CLICK_Buffer2,-1,-1;BUFF_DIST \"BUFF_DIST\" true true false 0 Double 0 0 ,First,#," + Line_P + ",BUFF_DIST,-1,-1;ORIG_FID \"ORIG_FID\" true true false 0 Long 0 0 ,First,#," + Line_P + ",ORIG_FID,-1,-1;Shape_length_1 \"Shape_length_1\" true true false 0 Double 0 0 ,First,#," + Line_P + ",Shape_length_1,-1,-1", "")

    # -- PART 2: Create the geometric network


    # Local variables:
    GeomNetwork = Output_Feature_Dataset + "\\GeomNetwork"
    GeomNetwork__2_ = GeomNetwork
    Flow_Option = "WITH_DIGITIZED_DIRECTION"
    USER_CLICK = ""
    GeomTrace = "GeomTrace"
    Accumulation_Cost = "-1"

    # Process: Create Geometric Network
    arcpy.CreateGeometricNetwork_management(Output_Feature_Dataset, "GeomNetwork", "", "", "", "", "", "PRESERVE_ENABLED")

    # Process: Set Flow Direction
    arcpy.SetFlowDirection_management(GeomNetwork, Flow_Option)

    # Process: Trace Geometric Network
    arcpy.TraceGeometricNetwork_management(GeomNetwork__2_, GeomTrace, USER_CLICK, "FIND_CONNECTED", Barriers, "", "", "", "", "NO_TRACE_ENDS", "NO_TRACE_INDETERMINATE_FLOW", "", "", "AS_IS", "", "", "", "AS_IS")

